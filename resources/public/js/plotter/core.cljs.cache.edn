;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name plotter.core, :imports nil, :requires nil, :uses nil, :defs {chain {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/d3-in-action/src/plotter/core.cljs", :line 3, :column 7, :end-line 3, :end-column 12, :arglists (quote ([e]))}, :name plotter.core/chain, :variadic false, :file "/Users/pierre/Code/Clojure/d3-in-action/src/plotter/core.cljs", :end-column 12, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, IRealize {:meta {:file "/Users/pierre/Code/Clojure/d3-in-action/src/plotter/core.cljs", :line 9, :column 14, :end-line 9, :end-column 22, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {realize [[this]]}}}, :protocol-symbol true, :name plotter.core/IRealize, :file "/Users/pierre/Code/Clojure/d3-in-action/src/plotter/core.cljs", :end-column 22, :column 1, :line 9, :protocol-info {:methods {realize [[this]]}}, :info nil, :end-line 9, :impls #{plotter.core/Grapher}, :doc nil, :jsdoc ("@interface")}, realize {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/d3-in-action/src/plotter/core.cljs", :line 10, :column 4, :end-line 10, :end-column 11, :protocol plotter.core/IRealize, :doc nil, :arglists (quote ([this]))}, :protocol plotter.core/IRealize, :name plotter.core/realize, :variadic false, :file "/Users/pierre/Code/Clojure/d3-in-action/src/plotter/core.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, Grapher {:num-fields 2, :protocols #{plotter.core/IRealize cljs.core/IFn cljs.core/ILookup}, :name plotter.core/Grapher, :file "/Users/pierre/Code/Clojure/d3-in-action/src/plotter/core.cljs", :end-column 17, :type true, :column 10, :line 12, :record false, :end-line 12, :skip-protocol-flag #{cljs.core/IFn cljs.core/ILookup}}, ->Grapher {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/d3-in-action/src/plotter/core.cljs", :line 12, :column 10, :end-line 12, :end-column 17, :protocols #{plotter.core/IRealize cljs.core/IFn cljs.core/ILookup}, :skip-protocol-flag #{cljs.core/IFn cljs.core/ILookup}, :factory :positional, :arglists (quote ([obj res]))}, :protocols #{plotter.core/IRealize cljs.core/IFn cljs.core/ILookup}, :name plotter.core/->Grapher, :variadic false, :file "/Users/pierre/Code/Clojure/d3-in-action/src/plotter/core.cljs", :end-column 17, :method-params ([obj res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([obj res])), :skip-protocol-flag #{cljs.core/IFn cljs.core/ILookup}}, make-plotter {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/d3-in-action/src/plotter/core.cljs", :line 31, :column 7, :end-line 31, :end-column 19, :arglists (quote ([obj]))}, :name plotter.core/make-plotter, :variadic false, :file "/Users/pierre/Code/Clojure/d3-in-action/src/plotter/core.cljs", :end-column 19, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj]))}, plot {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/d3-in-action/src/plotter/core.cljs", :line 34, :column 7, :end-line 34, :end-column 11, :arglists (quote ([plotter [k vs]]))}, :name plotter.core/plot, :variadic false, :file "/Users/pierre/Code/Clojure/d3-in-action/src/plotter/core.cljs", :end-column 11, :method-params ([plotter p__23752]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([plotter [k vs]]))}, plot- {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/d3-in-action/src/plotter/core.cljs", :line 39, :column 7, :end-line 39, :end-column 12, :arglists (quote ([plotter [k vs]]))}, :name plotter.core/plot-, :variadic false, :file "/Users/pierre/Code/Clojure/d3-in-action/src/plotter/core.cljs", :end-column 12, :method-params ([plotter p__23755]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists (quote ([plotter [k vs]]))}, => {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/d3-in-action/src/plotter/core.cljs", :line 44, :column 7, :end-line 44, :end-column 9, :arglists (quote ([plotter props]))}, :name plotter.core/=>, :variadic false, :file "/Users/pierre/Code/Clojure/d3-in-action/src/plotter/core.cljs", :end-column 9, :method-params ([plotter props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([plotter props]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{res obj}, :order [obj res]}, :doc nil}